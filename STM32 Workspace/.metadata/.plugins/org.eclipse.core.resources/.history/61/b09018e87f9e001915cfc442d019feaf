/*
 * stm32f407xx_usart.h
 *
 *  Created on: Jul 4, 2019
 *      Author: dhilan22
 */

#ifndef INC_STM32F407XX_USART_H_
#define INC_STM32F407XX_USART_H_

#include "stm32f407xx.h"

// Configuration structure for USARTx Peripheral
typedef struct
{
	uint8_t USART_Mode;				// Possible values from @USART_MODES
	uint8_t USART_BaudRate;			// Possible values from @USART_BAUD_RATES
	uint8_t USART_NoStopBits;		// Possible values from @USART_STOP_BITS
	uint8_t USART_WordLength;		// Possible values from @USART_WORD_LENGTHS
	uint8_t USART_ParityControl;	// Possible values from @USART_PARITY_CONTROL
	uint8_t USART_HWFlowControl;	// Possible values from @USART_HW_FLOW_CONTROL
}USART_Config_t;

// Handle structure for USARTx Peripheral
typedef struct
{
	USART_RegDef_t	*pUSARTx;			// Pointer to hold base address of USARTx peripheral
	USART_Config_t	USART_PinConfig;	// For configuring USARTx peripheral parameters
	uint8_t 		*pTxBuffer;			// To store app. Tx buffer address
	uint8_t 		*pRxBuffer;			// To store app. Rx buffer address
	uint32_t		TxLen;				// Data transmission length
	uint32_t		RxLen;				// Data reception length
	uint8_t 		TxBusyState;		// TX Communication state
	uint8_t 		RxBusyState;		// RX Communication state
}USART_Handle_t;




/*******************************************/
/***** 		Driver-supported APIs 	   *****/
/*******************************************/

// Peripheral Setup
void USART_PeriControl(USART_RegDef_t *pUSARTx, uint8_t ENorDI);
void USART_PeriCLKControl(USART_RegDef_t *pUSARTx, uint8_t ENorDI);

// Initialize and De-initialize
void USART_Init(USART_Handle_t *pUSARTHandle);
void USART_DeInit(USART_RegDef_t *pUSARTx);

// Data Send & Receive
void USART_SendData(USART_Handle_t *pUSARTHandle, uint8_t *pTXBuffer, uint32_t Len);
void USART_ReceiveData(USART_Handle_t *pUSARTHandle, uint8_t *pRXBuffer, uint32_t Len);

// Data Send & Receive w/ Interrupts
uint8_t USART_SendDataIT(USART_Handle_t *pUSARTHandle, uint8_t *pTXBuffer, uint32_t Len);
uint8_t USART_ReceiveDataIT(USART_Handle_t *pUSARTHandle, uint8_t *pRXBuffer, uint32_t Len);

// IRQ Configuration and ISR Handling
void USART_IRQInterruptConfig(uint8_t IRQNum, uint8_t ENorDI);
void USART_IRQPriorityConfig(uint8_t IRQNum, uint32_t IRQPriority);
void USART_IRQHandling(USART_Handle_t *pUSARTHandle);

// Other Peripheral Control APIs
uint8_t USART_GetFlagStatus(USART_RegDef_t *pUSARTx, uint32_t FlagName);
void USART_ClearFlag(USART_RegDef_t *pUSARTx, uint32_t FlagName);



#endif /* INC_STM32F407XX_USART_H_ */
