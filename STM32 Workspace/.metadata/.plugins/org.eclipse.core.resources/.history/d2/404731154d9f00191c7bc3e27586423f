/*
 * 008USART_TX_testing.c
 *
 *  Created on: Jul 5, 2019
 *      Author: dhilan22
 */

#include<stdio.h>
#include<string.h>
#include "stm32f407xx.h"

char msg[1024] = "USART Tx testing...\n\r";

USART_Handle_t usart2_handle;

/* For this source file, the exercise will be to send a message string through USART from STM32->Arduino:
 * Initialize the appropriate GPIO pins to work for USART communication (refer to Alt. Function Mapping and
 * select the set of USART pins for the correct application)
 * 	PA2 --> USART2_TX (connected to Arduino RX (0))
 * 	PA3 --> USART2_RX (connected to Arduino TX (1))
 * 	Alternate Function Mode --> 7
 */
void USART_GPIOInit(void)
{
	GPIO_Handle_t USARTPins;

	USARTPins.pGPIOx = GPIOA;
	USARTPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFUN;
	USARTPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
	USARTPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
	USARTPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	USARTPins.GPIO_PinConfig.GPIO_AltFunMode = 7;

	//USART2 TX
	USARTPins.GPIO_PinConfig.GPIO_PinNum = GPIO_PIN_2;
	GPIO_Init(&USARTPins);

	//USART2 RX
	USARTPins.GPIO_PinConfig.GPIO_PinNum = GPIO_PIN_3;
	GPIO_Init(&USARTPins);
}


void USART2_Init(void)
{
	usart2_handle.pUSARTx = USART2;
	usart2_handle.USART_PinConfig.USART_BaudRate = USART_BAUD_115200;
	usart2_handle.USART_PinConfig.USART_HWFlowControl = USART_HWFC_NONE;
	usart2_handle.USART_PinConfig.USART_Mode = USART_MODE_TX_ONLY;
	usart2_handle.USART_PinConfig.USART_NoStopBits = USART_STOPBITS_1;
	usart2_handle.USART_PinConfig.USART_WordLength = USART_WORDLEN_8BITS;
	usart2_handle.USART_PinConfig.USART_ParityControl = USART_PARITY_DI;
	USART_Init(&usart2_handle);
}

void GPIO_ButtonInit(void)
{
	GPIO_Handle_t GpioBlueBtn;
	memset(&GpioBlueBtn,0,sizeof(GpioBlueBtn));						// Clear default garbage bits
	GpioBlueBtn.pGPIOx = GPIOA;										// Create structure pointer and set to port A (user button found there)
	GpioBlueBtn.GPIO_PinConfig.GPIO_PinNum = GPIO_PIN_0;			// Set pin number to 0 (corresponds to blue user button)
	GpioBlueBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;			// Pin mode is input
	GpioBlueBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;		// Set speed to fast
	GpioBlueBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
	GPIO_Init(&GpioBlueBtn);
}


